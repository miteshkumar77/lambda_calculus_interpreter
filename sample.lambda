(\x.\y.(y x) (y w))
(\x.\y.(x y) (y w))
(\x.x y)
\x.(y x)
((\y.\x.(y x) \x.(x x)) y)
(((\b.\t.\e.((b t) e) \x.\y.x) x) y)
\x.((\x.(y x) \x.(z x)) x)
(\y.(\x.\y.(x y) y) (y w))
(\x.(y x) xx0)
(\x.\y.(y x) (\z.(q z) (y w))) 
(\x.\y.(x y) (\z.(q z) (y w))) # eta-reduction with renaming
(((\x.\x.\x.\x.\x.\x.\x.x y) y) y)
(\x.\x.x y)
(\z.\x.z y)
(\x.\y.(\x.(x w) \w.(w x)) z)
\y.(\x.(x w) \w.(w z))
\y.(\w0.(w0 z) w)
((\n.\m.\f.\x.((n f) ((m f) x)) \f.\x.(f x)) \f.\x.(f (f x))) # Church numeral ((|+| |1|) |2|) => |3|
((\n.\m.\f.\x.((n f) ((m f) x)) \f.\x.(f (f (f x)))) \f.\x.(f (f x))) # Church numeral ((|+| |3|) |2|) => |5|
\y.(w z)
(\y.z (\x.(x x) \x.(x x)))  # test applicative order
(((\y.\y.(y x) y) z) (\z.\x.\x.z \x.\z.\x.x))
\y.(\z.((q w) z) y) # eta-reduce inside of eta-reduce
\y.(\z.((q z) z) y) # eta-reduce inside of eta-reduce with z as a free variable as well as bound variable
\yx0.(\zx0.((q zx0) zx0) yx0) # what if we applied eta-reduction first, and then beta-reduction. we'd get \zx0.((q zx0) zx0) which is equivalent
((\y.\z.(z y) yx0) zx0) # test renaming conflicts with a free variable that already exists
